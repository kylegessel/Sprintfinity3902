Reviewed by: Bailey Ardrey
Reviewed on: 4/1/2021
Sprint 4
Reviewed Class: Game1.cs
File changed by: Ben Hobson
Time Spent: 20min

Reviewing commit: 58ef43ffc36127879579f6fe839aa44a66c2cc00
Reviewing empahsis: Maintainability

Ben did great work adapting the Game1.cs file. The main change Ben introduced
was Game States. The way the States are currently implemented are through 
an Enum called GameState. This enum houses the names of the GameStates like 
Intro, Playing, Paused, Paused_Transition, Win, Lose, and Options. Then there
is a GameState enum property called State that houses the current state. When 
the state changes, there are Switch cases in Update, Draw, and UpdateState 
that determine the functionality of Game1. This implementation is quite 
simple and easy to understand, making it very maintainable into the future
in that respect. Overall, I feel that it serves as a great foundation for 
what game states will be moving forward. However, I do feel the implementation
details of each state would be better housed in their own GameState class using
an implementation of the State pattern.

The State pattern implementation of this same concept that Ben started on 
might serve to be more maintainable in the future. One benefit of this change
would be that the implementation details that Game1 knows about would be cut 
down, making the very important class much more readable and maintainable.
Additionally, the GameStates themselves would also recieve a maintainable 
boost becuase the details of each state would be housed in its own class.

Bens changes to Game1 are foundational, and will absolutely serve as the road
forward for the class. Making some of these changes might make the class even
more maintainable.